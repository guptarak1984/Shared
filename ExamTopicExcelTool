package Dryrun;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class examtopicExcelUnpublist {
	public static XSSFWorkbook wb1;
	public static XSSFSheet sheet1;
	public static XSSFWorkbook wb2;
	public static XSSFSheet sheet2;
	
	
	
	
	public static void main(String[] args) throws IOException {
		
		String Option1="";
		String Option2="";
		String Option3="";
		String Option4="";
		List<String> Option = new ArrayList<String>();
		
		File file1 =  new File("C:\\Users\\A348404\\Downloads\\Unpublised\\Unpublished\\SalesForce\\SalesforceADM201.xlsx");
		FileInputStream  fis1 = new FileInputStream(file1);
		wb1 = new XSSFWorkbook(fis1);
		sheet1=wb1.getSheetAt(0);
		
		//--------------------------
		
		File file2 =  new File("C:\\Users\\A348404\\Downloads\\Unpublised\\Unpublished\\SalesForce\\SalesforceADM201Redefined.xlsx");
		FileInputStream  fis2 = new FileInputStream(file2);
		wb2 = new XSSFWorkbook(fis2);
		sheet2=wb2.getSheetAt(0);
		
		//-----------------------------
		int rowcount = sheet1.getLastRowNum();
		
		for(int j=0;j<rowcount+10;j++) 
		{
		sheet2.createRow(j);
		}
		
		
	
		
		for(int i=0;i<rowcount;i++)
		{
			String RawQues = sheet1.getRow(i).getCell(0).getStringCellValue();
			String RawAns = sheet1.getRow(i).getCell(1).getStringCellValue().trim();
			String RawWholeContent = sheet1.getRow(i).getCell(2).getStringCellValue().trim();
			String RawAnsSplit[] = RawAns.split("Correct Answer:");
		
			
			String RawWholeContentSplit[] = RawWholeContent.split("A\\.|B\\.|C\\.|D\\.|Hide|Reveal");
			
				
			String QuesWrite = RawWholeContentSplit[0].trim();
			String AnsWrite=RawAnsSplit[1].trim();
			
			for(int m=0;m<RawWholeContentSplit.length;m++)
			{
	/*		Option1 = RawWholeContentSplit[1].trim();
			Option2 = RawWholeContentSplit[2].trim();
			Option3 = RawWholeContentSplit[3].trim();
			Option4 = RawWholeContentSplit[4].trim();*/
			Option.add(RawWholeContentSplit[m]);
			
			}
			
			sheet2.getRow(i).createCell(0).setCellValue(QuesWrite); 
			sheet2.getRow(i).createCell(1).setCellValue(AnsWrite); 
			for(int k=0;k<Option.size();k++)
			{
				sheet2.getRow(i).createCell(2+k).setCellValue(Option.get(k)); 
			}
			
			Option.clear();
			
		/*	sheet2.getRow(i).createCell(1).setCellValue(Option1); 
			sheet2.getRow(i).createCell(2).setCellValue(Option2); 
			sheet2.getRow(i).createCell(3).setCellValue(Option3); 
			sheet2.getRow(i).createCell(4).setCellValue(Option4);*/
			
			
		}
		
		
		
		
		
		FileOutputStream fout=new FileOutputStream(file2);
		wb2.write(fout);
		wb2.close();
		wb1.close();
		
		
		

	}

}
